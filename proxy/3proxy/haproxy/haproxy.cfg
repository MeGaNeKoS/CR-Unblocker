defaults
  mode tcp
  option dontlog-normal       # suppress normal connection logs
  timeout connect 10s
  timeout client 1m
  timeout server 1m

# Expose HAProxy runtime metrics via the built-in stats page. This is safe to
# leave enabled as long as you replace the username/password below and, ideally,
# restrict the list of source IPs that are allowed to connect.
listen stats
  bind :::8404 v4v6
  mode http
  stats enable
  stats hide-version
  stats uri /stats
  stats refresh 10s
  stats show-legends
  # Public access: no auth, only serve /stats path
  http-request return status 404 unless { path_beg /stats }

frontend multiproxy
  bind :::5445 v4v6
  tcp-request inspect-delay 3s

  # SOCKS detection: first byte 0x05 (SOCKS5) or 0x04 (SOCKS4)
  acl is_socks5 payload(0,1) -m bin 05
  acl is_socks4 payload(0,1) -m bin 04

  # HTTP proxy detection: methods like CONNECT/GET/POST/HEAD/etc.
  acl is_http payload(0,7) -m str CONNECT
  acl is_http payload(0,3) -m str GET
  acl is_http payload(0,4) -m str POST
  acl is_http payload(0,4) -m str HEAD
  acl is_http payload(0,3) -m str PUT
  acl is_http payload(0,6) -m str DELETE
  acl is_http payload(0,7) -m str OPTIONS

  # Stop waiting once classified
  tcp-request content accept if is_socks5 or is_socks4 or is_http

  # Default action: reject unknown protocols after inspect-delay
  tcp-request content reject unless is_socks5 or is_socks4 or is_http
  # (replace with: `default_backend http_backend`  if you want to route unknowns as HTTP)

  use_backend socks_backend if is_socks5 or is_socks4
  use_backend http_backend  if is_http

backend socks_backend
  # balance roundrobin  # uncomment this if you had more than one HTTP server
  server s5_1 3proxy:1080   # no health check, rely on connection attempts

backend http_backend
  # balance roundrobin  # uncomment this if you had more than one HTTP server
  server http_1 3proxy:8080 # no health check, rely on connection attempts
